output: default
groups:
  OKWSME:
    name: Aggregate per_*_thruput to metrics
    description: use lookup to assign group name, then aggregate by that group
    disabled: false
    index: 3
  RF1qBS:
    name: Aggregate thruput to metrics
    description: use lookup to assign group name, then aggregate by that group
    index: 4
    disabled: false
asyncFuncTimeout: 1000
functions:
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Drop all metrics that are not thruput related
  - id: drop
    filter: "! (/group=per_/.test(_raw) || /group=thruput, name=thruput/.test(_raw))"
    disabled: null
    conf: {}
    final: true
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: "[optional] Aggregate by farm into metrics index"
  - id: comment
    filter: "true"
    disabled: false
    conf:
      comment: Pull the stats into stats
    groupId: OKWSME
  - id: serde
    filter: /group=per_/.test(_raw)
    disabled: false
    conf:
      mode: extract
      type: kvp
      srcField: _raw
      cleanFields: false
    groupId: OKWSME
  - id: lookup
    filter: group.startsWith('per_')
    disabled: false
    conf:
      matchMode: regex
      matchType: first
      reloadPeriodSec: 60
      addToEvent: false
      inFields:
        - eventField: host
          lookupField: host
      ignoreCase: false
      file: host_mapping.csv
      outFields:
        - lookupField: grouping
          eventField: farm
    groupId: OKWSME
    description: Lookup farm (pod, env, whatever) for aggregations
  - id: aggregation
    filter: farm
    disabled: false
    conf:
      passthrough: false
      preserveGroupBys: false
      sufficientStatsOnly: false
      metricsMode: true
      timeWindow: 30s
      aggregations:
        - max(avg_age).as('uf.thruput.max_age')
        - sum(ev).as('uf.thruput.ev')
        - sum(kb).as('uf.thruput.kb')
      cumulative: false
      groupbys:
        - series
        - farm
      add:
        - name: index
          value: "'metrics'"
        - name: source
          value: "'metrics:aggs'"
        - name: sourcetype
          value: "'metrics:aggs'"
    groupId: OKWSME
    final: false
  - id: comment
    filter: "true"
    disabled: false
    conf:
      comment: Pull the stats into stats
    groupId: RF1qBS
  - id: serde
    filter: /group=thruput/.test(_raw)
    disabled: false
    conf:
      mode: extract
      type: kvp
      srcField: _raw
      cleanFields: false
      dstField: stats
    groupId: RF1qBS
  - id: comment
    filter: "true"
    disabled: false
    conf:
      comment: Lookup host mapping
    groupId: RF1qBS
  - id: lookup
    filter: stats.name == 'thruput' && ! __criblMetrics
    disabled: false
    conf:
      matchMode: regex
      matchType: first
      reloadPeriodSec: 60
      addToEvent: false
      inFields:
        - eventField: host
          lookupField: host
      ignoreCase: false
      file: host_mapping.csv
      outFields:
        - lookupField: grouping
          eventField: farm
    groupId: RF1qBS
    description: Lookup farm (pod, env, whatever) for aggregations
  - id: aggregation
    filter: farm && ! __criblMetrics
    disabled: false
    conf:
      passthrough: false
      preserveGroupBys: false
      sufficientStatsOnly: false
      metricsMode: true
      timeWindow: 30s
      aggregations:
        - sum(stats.kb).as('uf.thruput.kb')
        - sum(stats.ev).as('uf.thruput.ev')
        - avg(stats.load_average).as('uf.os.load_avg')
      cumulative: false
      groupbys:
        - farm
      add:
        - name: index
          value: "'metrics'"
        - name: source
          value: "'metrics:aggs'"
        - name: sourcetype
          value: "'metrics:aggs'"
    groupId: RF1qBS
    final: false
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: "[optional] Trim timestamp from _raw logs (only runs if aggregations
        aren't enabled)"
  - id: mask
    filter: "! __criblMetrics"
    disabled: false
    conf:
      rules:
        - matchRegex: /^.*group=/
          replaceExpr: "'group='"
      fields:
        - _raw
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: "[optional] Trim source to just filename"
  - id: mask
    filter: "! __criblMetrics"
    disabled: false
    conf:
      rules:
        - matchRegex: /.*[\\/]/
          replaceExpr: "'./'"
      fields:
        - source
